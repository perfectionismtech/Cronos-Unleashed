class cFirestorm : cWeapon replaces CWeapFlame {
	Default {
		Inventory.RestrictedTo "cClericPlayer";
		Weapon.AmmoType1 "Mana2";
		Weapon.AmmoUse 5;
		Weapon.AmmoGive1 25;
		Weapon.YAdjust 10;
		Weapon.BobStyle "Smooth";
		Weapon.BobSpeed 1.4;
		Weapon.BobRangeX 1.0;
		Weapon.BobRangeY 0.7;
		+NOGRAVITY
		Weapon.SelectionOrder 1000;
		Inventory.PickupMessage "$TXT_WEAPON_C3";
		Tag "$TAG_CWEAPFLAME";
	}
	
	States {
	Spawn:
		WCFM ABCDEFGH 4 Bright Light("FirestormWeapon");
		Loop;
	Select:
		TNT1 A 0 A_SetCrosshair(56);
		TNT1 A 0 SpawnWeaponLight('cFirestormLight');
		CFLM A 1 Bright A_Raise(SELECT_SPEED);
		Wait;
	Deselect:
		CFLM A 1 Bright A_Lower(SELECT_SPEED);
		Wait;
	Ready:
		CFLM AAAABBBBCCCC 1 A_WeaponReady();
		Loop;
	Fire:
		CFLM A 2 Bright Offset(0, 26);
		CFLM D 2 Bright Offset(0, 38);
		CFLM D 2 Bright Offset(0, 26) FirestormAttack();
		CFLM E 4 Bright Offset(0, 30);
		CFLM F 4 Bright;
		CFLM E 4 Bright;
		CFLM F 4 Bright;
		CFLM E 4 Bright;
		CFLM G 2 Bright Offset(0, 32);
		CFLM G 2 Bright Offset(0, 50);
		CFLM C 3 Bright Offset(0, 32);
		Goto Ready;
	}
	
	action void FirestormAttack() {
		if (player == null) return;
		
		Weapon weapon = player.ReadyWeapon;
		if (weapon != null && !weapon.DepleteAmmo(weapon.bAltFire)) return;
		
		Actor mo = SpawnPlayerMissile("cFirestormMissile");
		
		A_AlertMonsters(ALERT_DIST_NORM);
		A_PlaySound("ClericFlameFire", CHAN_WEAPON);
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		cFlare(Spawn("cFlareTorch")).init(self, 16, 25, 0.2, true);
	}
}

class cFirestormMissile : FastProjectile {
	const CIRCLE_RADIUS = 42;
	const CIRCLE_FLAMES = 6;
	const BIG_DAMAGE = 86;
	const SMALL_DAMAGE = 32;
	
	Default {
		Radius 14;
		Height 8;
		Speed 80;
		DamageType "Fire";
		RenderStyle "Add";
		Obituary "$OB_MPCWEAPFLAME";
		+NOBLOOD
		+NODAMAGETHRUST
	}
	
	States {
	Spawn:
		CFFX N 14 Bright;
		Stop;
	Death:
		TNT1 A 1 A_Stop();
		CFFX A 4 Bright Light("FirestormBlast");
		CFFX B 4 Bright Light("FirestormBlast") SpawnFlames();
		CFFX C 4 Bright Light("FirestormBlast") DoDamage(BIG_DAMAGE);
		CFFX D 4 Bright Light("FirestormBlast");
		CFFX E 4 Bright Light("FirestormBlast") DoDamage(SMALL_DAMAGE);
		CFFX F 4 Bright Light("FirestormBlast");
		CFFX G 4 Bright Light("FirestormBlast") DoDamage(SMALL_DAMAGE);
		CFFX H 4 Bright Light("FirestormBlast");
		CFFX I 4 Bright Light("FirestormBlast") DoDamage(SMALL_DAMAGE);
		TNT1 A 0 { special2 = -1; }
		CFFX JKLM 4 Bright;
		Stop;
	}
	
	void DoDamage(int dmg) {
		A_Explode(dmg, 50, XF_NOSPLASH, false, 20, damagetype: "Fire");
	}
	
	void SpawnFlames() {
		int ang = 360 / CIRCLE_FLAMES;
		for (int i = 0; i < CIRCLE_FLAMES; i++) {
			Actor mo = Spawn("cFirestormCircleFlame", Vec3Angle(CIRCLE_RADIUS, i*ang));
			mo.master = self;
			mo.angle = i*ang + 90;
			mo.AddZ(4, false);
		}
		
		double z = GetZAt() - pos.z + 20;
		if (z > 0) AddZ(z, false);
		
		A_PlaySound("ClericFlameExplode");
	}
	
	override void BeginPlay() {
		Super.BeginPlay();
		special1 = 1; // controls where the trail starts
	}
	
	override void Effect() {
		// Special handling of the trail
		if (special1++ > 3) {
			Actor mo = Spawn("cFirestormTrail", pos);
			mo.angle = angle;
			mo.Vel3DFromAngle(3.3, angle+random(-15,15), pitch+random(-15,15));
			
			special1 = 0;
		}
	}
}

class cFirestormCircleFlame : Actor {
	const CIRCLE_SPEED = 1.9;
	const CIRCLE_ANG_DELTA = 2.6;
	// These need to be updated if the spawn radius is updated
	
	Default {
		Radius 6;
		RenderStyle "Add";
		+NOINTERACTION
	}
	
	States {
	Spawn:
		CFCF ABCDEFGHIJKLM random(3,4) Bright;
		Loop;
	Death:
		CFCF NO 4 Bright;
		CFCF P 3 Bright;
		Stop;
	}
	
	override void Tick() {
		if (!level.isFrozen()) {
			angle += CIRCLE_ANG_DELTA;
			VelFromAngle(CIRCLE_SPEED, angle);
			
			if (!master || master.special2 == -1) {
				if (!InStateSequence(curState, ResolveState("Death"))) {
					if (random() < 32) SetStateLabel("Death");
				}
			}
		}
		
		Super.Tick();
	}
}

class cFirestormTrail : Actor {
	Default {
		+NOINTERACTION
		RenderStyle "Add";
	}
	
	States {
	Spawn:
		CFFX N 5 Bright;
		CFFX O 4 Bright;
		CFFX P 3 Bright;
		Stop;
	}
}

class cFirestormLight : cPlayerLight {
	Default {
		Args 77, 26, 0, 48;
	}
	
	override void Tick() {
		Super.Tick();
		
		if(!target || !target.player || !target.player.readyWeapon ||
			target.player.readyWeapon.GetClass() != "cFirestorm") {
			Destroy();
		}
	}
}
