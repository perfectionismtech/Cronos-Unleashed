class cFists : cWeapon {
	Default {
		Inventory.RestrictedTo "cFighterPlayer";
		+BLOODSPLATTER
		Weapon.BobStyle "Smooth";
		Weapon.BobSpeed 1.4;
		Weapon.BobRangeX 1.0;
		Weapon.BobRangeY 0.7;
		Weapon.SelectionOrder 3400;
		+WEAPON.MELEEWEAPON
		Obituary "$OB_MPFWEAPFIST";
		Tag "$TAG_FWEAPFIST";
	}
	
	States {
	Spawn:
		WFST A -1;
		Stop;
	Select:
		TNT1 A 0 A_SetCrosshair(50);
		FPCH A 1 A_Raise(SELECT_SPEED);
		Wait;
	Deselect:
		FPCH A 1 A_Lower(SELECT_SPEED);
		Wait;
	Ready:
		FPCH A 1 A_WeaponReady();
		Loop;
	Fire:
	FireRight:
		FPCH B 2 Offset(21, 46);
		FPCH B 2 Offset(-11, 37);
		FPCH C 1 Offset(32, 30);
		FPCH C 1 Offset(6, 23);
		FPCH C 3 Offset(-21, 18) PunchAttack(false);
		FPCH C 2 Offset(-10, 23);
		FPCH C 1 Offset(9, 36);
		FPCH B 1 Offset(-43, 54) AltReFire("FireLeft", "AltFire");
		FPCH B 2 Offset(-22, 79);
		Goto Ready;
	FireLeft:
		FPCH E 2 Offset(-21, 46);
		FPCH E 2 Offset(11, 37);
		FPCH F 1 Offset(-32, 30);
		FPCH F 1 Offset(-6, 23);
		FPCH F 3 Offset(21, 18) PunchAttack(false);
		FPCH F 2 Offset(10, 23);
		FPCH F 1 Offset(-9, 36);
		FPCH E 1 Offset(43, 54) AltReFire("FireRight", "AltFire");
		FPCH E 2 Offset(22, 79);
		Goto Ready;
	AltFire:
	FireMighty:
		// Deliver a MIGHTY BLOW!
		TNT1 A 3;
		TNT1 A 1 A_SetAngle(angle-2, SPF_INTERPOLATE);
		FPCH B 2 Offset(23, 45) A_SetAngle(angle-1, SPF_INTERPOLATE);
		FPCH B 1 Offset(-13, 35);
		FPCH C 1 Offset(30, 30) A_PlaySound("FighterGrunt", CHAN_VOICE);
		FPCH C 1 Offset(9, 27) A_SetAngle(angle+1, SPF_INTERPOLATE);
		FPCH C 1 Offset(-20, 24) A_SetAngle(angle+1, SPF_INTERPOLATE);
		FPCH D 1 Offset(46, 24) {
			A_SetAngle(angle+1, SPF_INTERPOLATE);
			PunchAttack(true);
		}
		FPCH D 1 Offset(31, 25);
		FPCH D 2 Offset(18, 31);
		FPCH D 2 Offset(2, 46);
		FPCH D 2 Offset(-7, 63);
		FPCH D 2 Offset(-14, 85);
		FPCH D 2 Offset(-18, 114);
		TNT1 A 11;
		Goto Ready;
	}
	
	const SMALL_DAMAGE = 34;
	const LARGE_DAMAGE = 56;
	
	action void PunchAttack(bool mightyBlow = false) {
		if (player == null) return;
		
		Weapon weap = player.readyWeapon;
		
		int attackDamage = RandomizeDamage(mightyBlow ? LARGE_DAMAGE : SMALL_DAMAGE);
		double knockback = mightyBlow ? 6 : 2;
		
		Actor victim, puff;
		[victim, puff] = MeleeAttack(attackDamage, MELEERANGE_MED, knockback, 8, "cPunchPuff");
		
		// Cause pain
		if (mightyBlow && victim && !(victim.bINVULNERABLE || victim.bBOSS)) victim.TriggerPainChance('Melee', true);
		
		if (victim || puff) {
			WeaponShake(mightyBlow ? 3 : 1, 5);
			A_AlertMonsters(ALERT_DIST_NORM);
		}
	}
}

// Puff
class cPunchPuff : cPuff {
	Default {
		VSpeed 0.15;
		RenderStyle "Translucent";
		Alpha 0.5;
		+FORCEXYBILLBOARD
		SeeSound "FighterPunchHitThing";
		AttackSound "FighterPunchHitWall";
		ActiveSound "FighterPunchMiss";
	}
	
	States {
	Spawn:
		FHFX ST 4;
		FHFX UVW 4 A_FadeOut(0.1);
		Stop;
	HitBleeding:
		TNT1 A 0;
		Stop;
	}
}
