class cFists : FWeapFist {
	const PUNCH_RANGE = 80.0;
	const SMALL_DAMAGE = 34;
	const LARGE_DAMAGE = 49;
	
	Default {
		Weapon.BobStyle "Smooth";
		Weapon.BobRangeX 1.0;
		Weapon.BobRangeY 0.7;
		Weapon.BobSpeed 1.4;
		+BLOODSPLATTER
		+WEAPON.NOAUTOAIM
		+WEAPON.NOALERT
		+INVENTORY.RESTRICTABSOLUTELY
	}
	
	States {
	Spawn:
		WFST A -1;
		Stop;
	Select:
		TNT1 A 0 A_SetCrosshair(50);
		FPCH A 1 A_Raise(15);
		Wait;
	Deselect:
		FPCH A 1 A_Lower(15);
		Wait;
	Fire:
		FPCH B 2 Offset(8, 46);
		FPCH C 2 Offset(34, 30);
		FPCH C 1 Offset(8, 24);
		FPCH D 1 Offset(22, 26);
		FPCH D 3 Offset(8, 22) PunchAttack();
		FPCH D 2 Offset(37, 28);
		FPCH C 1 Offset(26, 30);
		TNT1 A 0 A_ReFire("Fire2");
		FPCH C 2 Offset(50, 47);
		FPCH B 3 Offset(22, 65);
		Goto Ready;
	Fire2:
		FPCH F 1 Offset(-8, 46);
		FPCH G 1 Offset(-37, 26);
		FPCH G 1 Offset(-8, 24);
		FPCH H 3 Offset(-8, 22) PunchAttack(false);
		FPCH H 2 Offset(-37, 28);
		FPCH G 1 Offset(-26, 30);
		TNT1 A 0 A_ReFire("Fire3");
		FPCH G 2 Offset(-50, 47);
		FPCH F 3 Offset(-22, 65);
		Goto Ready;
	Fire3:
		TNT1 A 5;
		FPCH B 3 Offset(8, 49);
		FPCH C 2 Offset(34, 38);
		FPCH C 1 Offset(8, 30);
		FPCH D 1 Offset(28, 32) A_PlaySound("FighterGrunt", CHAN_VOICE);
		FPCH D 2 Offset(10, 27);
		FPCH E 2 Offset(39, 28) PunchAttack(true);
		FPCH E 2 Offset(6, 34);
		FPCH E 2 Offset(14, 52);
		FPCH E 2 Offset(30, 63);
		FPCH D 3 Offset(2, 73);
		FPCH D 3 Offset(44, 78);
		FPCH C 4 Offset(52, 84);
		TNT1 A 6;
		Goto Ready;
	}
	
	action void PunchAttack(bool bigPunch = false) {
		int attackDamage = bigPunch ? LARGE_DAMAGE : SMALL_DAMAGE;
		attackDamage = int( attackDamage * frandom[FistDamage](0.9,1.1) );
		if (FindInventory("PowerInvulnerable")) attackDamage *= 2;
		
		FTranslatedLineTarget t;
		for (int i=0; i<=8; i=(i>0 ? -i : -i+2) ) {
			if (LineAttack(angle + i, PUNCH_RANGE, pitch, attackDamage, "Melee", "cPunchPuff", 0, t)) {
				if (t.linetarget != null) {
					if (t.linetarget.mass < LARGE_MASS && !t.linetarget.bDontThrust) {
						if (t.linetarget.bIsMonster) {
							t.linetarget.Thrust(bigPunch ? 5 : 2, t.attackAngleFromSource);
						}
					}
				}
				A_AlertMonsters(1500);
				
				if (bigpunch) {
					if(GetCVar("weapon_shake")) A_Quake(2, 6, 0, 1, "");
				} else {
					if(GetCVar("weapon_shake")) A_Quake(1, 6, 0, 1, "");
				}
				return;
			}
		}
		return;
	}
}

// Puff
class cPunchPuff : cPuff {
	Default {
		VSpeed 0.15;
		RenderStyle "Translucent";
		Alpha 0.5;
		+FORCEXYBILLBOARD
		SeeSound "FighterPunchHitThing";
		AttackSound "FighterPunchHitWall";
		ActiveSound "FighterPunchMiss";
	}
	
	States {
	Spawn:
		FHFX ST 4;
		FHFX UVW 4 A_FadeOut(0.1);
		Stop;
	HitBleeding:
		TNT1 A 0;
		Stop;
	}
}
