class cAxe : cWeapon replaces FWeapAxe {
	Default {
		Inventory.RestrictedTo "cFighterPlayer";
		Weapon.AmmoType1 "Mana1";
		Weapon.AmmoUse1 3;
		Weapon.AmmoGive1 0;
		+WEAPON.AMMO_OPTIONAL
		+WEAPON.AXEBLOOD
		-BLOODSPLATTER
		Weapon.YAdjust -12;
		Weapon.BobStyle "Smooth";
		Weapon.BobSpeed 1.4;
		Weapon.BobRangeX 0.8;
		Weapon.BobRangeY 1.0;
		Weapon.SelectionOrder 1500;
		+WEAPON.MELEEWEAPON
		Inventory.PickupMessage "$TXT_WEAPON_F2";
		Obituary "$OB_MPFWEAPAXE";
		Tag "$TAG_FWEAPAXE";
	}
	
	const EMPTY_DAMAGE = 40;
	const CHARGED_DAMAGE = 64;
	
	States {
	Spawn:
		WFAX A -1;
		Stop;
	Select:
		TNT1 A 0 A_SetCrosshair(51);
		TNT1 A 0 SpawnWeaponLight('cAxeLight');
		FAXE A 1 A_Raise(SELECT_SPEED);
		Wait;
	Select.Glow:
		TNT1 A 0 A_SetCrosshair(51);
		TNT1 A 0 SpawnWeaponLight('cAxeLight');
		FAXE L 1 Bright A_Raise(SELECT_SPEED);
		Wait;
	Deselect:
		FAXE A 1 A_Lower(SELECT_SPEED);
		Wait;
	Deselect.Glow:
		FAXE L 1 Bright A_Lower(SELECT_SPEED);
		Wait;
	Ready:
		FAXE A 1 AxeWeapReady();
		Loop;
	Ready.Glow:
		FAXE MMMMMMMMMMMMMMMM 1 Bright AxeWeapReady();
		FAXE LLL 1 Bright AxeWeapReady();
		FAXE MMMMMMMMMMM 1 Bright AxeWeapReady();
		FAXE LLL 1 Bright AxeWeapReady();
		FAXE MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM 1 Bright AxeWeapReady();
		FAXE LLL 1 Bright AxeWeapReady();
		Loop;
	Fire:
		FAXE B 3 Offset(15, 32);
		FAXE C 3 Offset(18, 32);
		FAXE D 2 Offset(25, 32);
		FAXE D 2 Offset(-10, 82) AxeAttack(false);
		FAXE E 1 Offset(15, 32);
		FAXE E 2 Offset(10, 54);
		TNT1 A 7;
		FAXE A 1 Offset(0, 60) A_ReFire();
		FAXE A 1 Offset(0, 52);
		FAXE A 1 Offset(0, 44);
		FAXE A 1 Offset(0, 36);
		FAXE A 1;
		Goto Ready;
	Fire.Glow:
		FAXE N 3 Bright Offset(15, 32);
		FAXE O 3 Bright Offset(18, 32);
		FAXE P 2 Bright Offset(25, 32);
		FAXE P 2 Bright Offset(-10, 82) AxeAttack(true);
		FAXE Q 1 Bright Offset(15, 32);
		FAXE Q 2 Bright Offset(10, 54);
		TNT1 A 7;
		FAXE M 1 Bright Offset(0, 60) A_ReFire();
		FAXE M 1 Bright Offset(0, 52);
		FAXE M 1 Bright Offset(0, 44);
		FAXE M 1 Bright Offset(0, 36);
		FAXE M 1;
		Goto Ready.Glow;
	}
	
	override State GetUpState() {
		return Ammo1.Amount ? FindState('Select.Glow') : FindState('Select');
	}
	
	override State GetDownState() {
		return Ammo1.Amount ? FindState('Deselect.Glow') : FindState('Deselect');
	}
	
	override State GetReadyState() {
		return Ammo1.Amount ? FindState('Ready.Glow') : FindState('Ready');
	}
	
	override State GetAtkState(bool hold) {
		return Ammo1.Amount ? FindState('Fire.Glow') : Super.GetAtkState(hold);
	}
	
	action void AxeWeapReady() {
		if (player == null) return;
		
		Weapon weap = player.readyWeapon;
		if (weap != null) {
			if ( weap.InStateSequence(player.GetPSprite(PSP_WEAPON).curState, weap.GetReadyState())) {
				A_WeaponReady();
			} else {
				player.SetPSprite(PSP_WEAPON, weap.GetReadyState());
			}
		}
	}
	
	action void AxeAttack(bool poweredAttack) {
		if (player == null) return;
		Weapon weapon = player.ReadyWeapon;
		
		int attackDamage = RandomizeDamage(poweredAttack ? CHARGED_DAMAGE : EMPTY_DAMAGE);
		class<Actor> puffType = poweredAttack ? "cAxePuffGlow" : "cAxePuff";
		
		Actor victim, puff;
		[victim, puff] = MeleeAttack(attackDamage, MELEERANGE_LONG, 3, 10, puffType);
		
		if (poweredAttack && victim) {
			weapon.DepleteAmmo(weapon.bAltFire);
		}
		
		if (victim || puff) {
			WeaponShake(2, 6);
			A_AlertMonsters(ALERT_DIST_NORM);
		} else {
			A_AlertMonsters(ALERT_DIST_NEAR);
		}
	}
}

class cAxePuff : cPuff {
	Default {
		RenderStyle "Translucent";
		Alpha 0.6;
		+FORCEXYBILLBOARD
		SeeSound "FighterAxeHitThing";
		AttackSound "FighterHammerHitWall";
		ActiveSound "FighterHammerMiss";
	}
	
	States {
	Spawn:
		FHFX ST 4;
		FHFX UVW 4 A_FadeOut(0.2);
		Stop;
	HitBleeding:
		TNT1 A 0;
		Stop;
	HitInvulnerable:
	HitWall:
		TNT1 A 0 A_SetRenderStyle(0.7, STYLE_Add);
		MHIT A 3 SparkParticles();
		MHIT AAAA 2 A_FadeOut(0.2);
		Stop;
	}
}

class cAxePuffGlow : cPuff {
	Default {
		RenderStyle "Add";
		Alpha 1.0;
		+FORCEXYBILLBOARD
		SeeSound "FighterAxeHitThing";
		AttackSound "FighterHammerHitWall";
		ActiveSound "FighterHammerMiss";
	}
	
	States {
	Spawn:
		FAXE RS 3 Bright Light("AxeGlowPuff");
		FAXE VX 3 Bright Light("AxeGlowPuff") A_FadeOut(0.3);
		Stop;
	}
}

class cAxeLight : cPlayerLight {
	Default {
		Args 26, 26, 77, 40, 32;
		DynamicLight.Type "Flicker";
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		specialf1 = 340;
	}
	
	override void Tick() {
		Super.Tick();
		
		if(!target || !target.player || !target.player.readyWeapon ||
			target.player.readyWeapon.GetClass() != "cAxe") {
			Destroy();
		} else {
			bDORMANT = !target.CheckInventory("Mana1", 1);
		}
	}
}
