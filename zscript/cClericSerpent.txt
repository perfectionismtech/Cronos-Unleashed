class cSerpentStaff : cWeapon replaces CWeapStaff {
	Default {
		Inventory.RestrictedTo "cClericPlayer";
		Weapon.AmmoType1 "Mana1";
		Weapon.AmmoUse1 2;
		Weapon.AmmoGive1 25;
		Weapon.AmmoType2 "Mana1";
		Weapon.AmmoUse2 1;
		Weapon.YAdjust 8;
		Weapon.BobStyle "InverseSmooth";
		Weapon.BobSpeed 1.6;
		Weapon.BobRangeX 0.6;
		Weapon.BobRangeY 0.8;
		Weapon.SelectionOrder 1600;
		Inventory.PickupMessage "$TXT_WEAPON_C2";
		Obituary "$OB_MPCWEAPSTAFFM";
		Tag "$TAG_CWEAPSTAFF";
	}
	
	const DRAIN_DAMAGE = 21;
	const DRAIN_RATIO = 0.4;
	
	States {
	Spawn:
		WCSS A -1;
		Stop;
	Select:
		TNT1 A 0 A_SetCrosshair(55);
		CSSF C 1 A_Raise(SELECT_SPEED);
		Wait;
	Deselect:
		CSSF BB 1 A_Lower(SELECT_SPEED);
		CSSF C 1 A_Lower(SELECT_SPEED);
		Wait;
	Ready:
		CSSF C 4;
		CSSF B 3 InitBlink();
		CSSF AAAAAAA 1 A_WeaponReady();
		TNT1 A 0 CheckBlink();
		Goto Ready+2;
	Blink:
		CSSF BBBCCCCCBBB 1 A_WeaponReady();
		Goto Ready+2;
	Fire:
		CSSF A 1 Offset(0, 43);
		CSSF J 3 Offset(0, 47) SerpentStaffFire();
		CSSF J 2 Offset(0, 41);
		CSSF A 1 Offset(0, 40);
		CSSF A 2 Offset(0, 39);
		CSSF A 2 Offset(0, 36);
		CSSF A 2 Offset(0, 34);
		Goto Ready+2;
	AltFire:
		TNT1 A 0 A_WeaponOffset(0+random(-1,1), 32+random(-1,1));
		CSSF B 3 TryDrain();
		TNT1 A 0 A_ReFire();
		Goto Ready+2;
	AltFire.Drain:
		CSSF J 1 Offset(0, 34) A_PlaySound("ClericCStaffHitThing", CHAN_WEAPON);
		CSSF K 5 Offset(0, 36);
		CSSF K 3 Offset(0, 38);
		CSSF K 2 Offset(0, 39);
		TNT1 A 0 A_ReFire();
		Goto Ready+2;
	}
	
	action void SerpentStaffFire() {
		if (player == null) return;
		
		Weapon weap = player.readyWeapon;
		if (weap != null && !weap.DepleteAmmo(weap.bAltFire)) return;
		
		Actor mo;
		mo = A_FireProjectile("cSerpentStaffMissile", 1.4, false, -6);
		if (mo) mo.bSPRITEFLIP = true;
		
		mo = A_FireProjectile("cSerpentStaffMissile", -1.4, false, 6);
		if (mo) mo.WeaveIndexXY = 32;
		
		A_AlertMonsters(ALERT_DIST_NORM);
		A_PlaySound("ClericCStaffFire", CHAN_WEAPON);
	}
	
	action state TryDrain() {
		if (player == null) return null;
		Weapon weapon = player.readyWeapon;
		
		FTranslatedLineTarget lt;
		double angOff, slope;
		Actor victim;
		
		[angOff, slope] = AimMeleeAttack(lt, MELEERANGE_MED, 6);
		
		if (victim = lt.lineTarget) {
			if (isValidDrainTarget(victim)) {
				Actor puff;
				int dam;
				
				if (weapon && !weapon.DepleteAmmo(weapon.bAltFire)) return null;
				
				[puff, dam] = LineAttack(angle+angOff, MELEERANGE_MED, slope, DRAIN_DAMAGE, 
					'Melee', "cSerpentDrainPuff", LAF_ISMELEEATTACK, lt);
				GiveBody(int(floor(dam * DRAIN_RATIO)));
				
				WeaponShake(1, 10);
				A_AlertMonsters(ALERT_DIST_NORM);
				
				return ResolveState('AltFire.Drain');
			}
		}
		
		// No valid targets
		return null;
	}
	
	action bool isValidDrainTarget(Actor other) {
		if (!other) return false;
		if (!(other.bISMONSTER || other.player)) return false;
		if (other.bDORMANT || other.bINVULNERABLE) return false;
		if (other.player && level.teamDamage == 0 && other.IsTeammate(self)) return false;
		
		return true;
	}
	
	action void InitBlink() {
		weaponSpecial = random[SerpentStaffBlink](25, 60);
	}
	
	action void CheckBlink() {
		if (player && player.readyWeapon) {
			if (--weaponSpecial <= 0) {
				player.SetPsprite(PSP_WEAPON, player.readyWeapon.FindState('Blink'));
				weaponSpecial = random[SerpentStaffBlink](15, 45);
			}
		}
	}
}

class cSerpentStaffMissile : CStaffMissile replaces CStaffMissile {
	cFlare flare;
	
	Default {
		DamageFunction cWeapon.RandomizeDamage(23);
		Speed 22;
		+FORCEXYBILLBOARD
	}
	
	States {
	Spawn:
		CSSF DDEE 1 Bright Light("SerpentStaffMissile") A_Weave(3, 0, 0.8, 0);
		Loop;
	Death:
		TNT1 A 0 {
			SpawnParticles();
			if (flare) flare.Destroy();
		}
		CSSF FG 4 Bright Light("SerpentStaffBlast1") A_StopSound(CHAN_BODY);
		CSSF HI 3 Bright Light("SerpentStaffBlast2");
		Stop;
	}
	
	void SpawnParticles() {
		for (int i = 0; i < 8; i++) {
			A_SpawnParticle("27EC30", SPF_FULLBRIGHT, 30, 3, 0, 0, 0, 0, 
				frandom(-2, 2), frandom(-2, 2), frandom(1, 4), 0, 0, -0.4, 1, 0, -0.07);
		}
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		
		bNOBLOOD = (random() < 128);
		A_PlaySound("SerpentStaffContinuous", looping: true);
		flare = cFlare(Spawn("cFlareGreen")).Init(self, 0, 16, 0.1);
	}
}

class cSerpentDrainPuff : cPuff {
	Default {
		RenderStyle "Translucent";
		Alpha 0.6;
		VSpeed 0.7;
	}
	
	States {
	Spawn:
		CSSF LMNO 5 Bright A_FadeOut(0.1);
		Stop;
	}
}
