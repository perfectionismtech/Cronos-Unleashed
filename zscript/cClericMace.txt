class cMace : CWeapMace {
	const MACE_RANGE = 96.0;
	const MACE_DAMAGE = 26;
	
	Default {
		Weapon.BobStyle "Smooth";
		Weapon.BobRangeX 0.8;
		Weapon.BobRangeY 1.0;
		Weapon.BobSpeed 1.4;
		+WEAPON.AXEBLOOD
		-BLOODSPLATTER
		+WEAPON.NOAUTOAIM
		+WEAPON.NOALERT
		+INVENTORY.RESTRICTABSOLUTELY
	}
	
	States {
	Spawn:
		WMCE A -1;
		Stop;
	Select:
		TNT1 A 0 A_SetCrosshair(54);
		CMCE A 1 A_Raise(15);
		Loop;
	Deselect:
		CMCE A 1 A_Lower(15);
		Loop;
	Ready:
		CMCE A 1 A_WeaponReady();
		Loop;
	Fire:
		CMCE B 2 Offset(17, 41);
		CMCE B 2 Offset(4, 37);
		CMCE B 2 Offset(-12, 44);
		CMCE C 1 Offset(8, 44);
		CMCE D 1 Offset(23, 44) { if(GetCVar("weapon_shake")) A_Quake(1, 5, 0, 1, ""); }
		CMCE D 1 Offset(5, 60);
		CMCE E 1 Offset(-6, 76) MaceAttack();
		CMCE F 1 Offset(17, 49);
		CMCE F 1 Offset(1, 76);
		CMCE F 1 Offset(-13, 105);
		TNT1 A 11;
		TNT1 A 0 A_ReFire();
		Goto WindDown;
	WindDown:
		CMCE A 1 Offset(15, 78);
		CMCE A 1 Offset(15, 71);
		CMCE A 1 Offset(14, 64);
		CMCE A 1 Offset(13, 58);
		CMCE A 1 Offset(11, 52);
		CMCE A 1 Offset(8, 46);
		CMCE A 1 Offset(5, 40);
		CMCE A 1 Offset(3, 36);
		CMCE A 1 Offset(2, 33);
		Goto Ready;
	}
	
	action void MaceAttack() {
		int attackDamage = int( MACE_DAMAGE * frandom[MaceAttack](0.9,1.1) );
		
		FTranslatedLineTarget t;
		for (int i=0; i<=6; i=i>0 ? -i : -i+2 ) {
			if (LineAttack(angle + i, MACE_RANGE, pitch, attackDamage, "Melee", "cMacePuff", 0, t)) {
				A_AlertMonsters(1500);
				if (GetCVar("weapon_shake")) A_Quake(2, 6, 0, 1, "");
				return;
			}
		}
		A_AlertMonsters(120);
		return;
	}
}

class cMacePuff : cPuff {
	Default {
		RenderStyle "Translucent";
		Alpha 0.6;
		+FORCEXYBILLBOARD
		SeeSound "FighterAxeHitThing";
		AttackSound "FighterHammerHitWall";
		ActiveSound "FighterHammerMiss";
	}
	
	States {
	Spawn:
		FHFX ST 4;
		FHFX UVW 4 A_FadeOut(0.2);
		Stop;
	HitBleeding:
		TNT1 A 0;
		Stop;
	HitInvulnerable:
	HitWall:
		TNT1 A 0 A_SetRenderStyle(0.7, STYLE_Add);
		MHIT A 3 SparkParticles();
		MHIT AAAA 2 A_FadeOut(0.2);
		Stop;
	}
}
