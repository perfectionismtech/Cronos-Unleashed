class cBloodscourge : cWeapon replaces MWeapBloodscourge {
	Default {
		Inventory.RestrictedTo "cMagePlayer";
		Health 3; // Weapon Pieces
		+INVENTORY.NOATTENPICKUPSOUND
		Weapon.AmmoType1 "Mana1";
		Weapon.AmmoType2 "Mana2";
		Weapon.AmmoUse1 15;
		Weapon.AmmoUse2 15;
		Weapon.AmmoGive1 25;
		Weapon.AmmoGive2 25;
		+WEAPON.PRIMARY_USES_BOTH
		Weapon.YAdjust 14;
		Weapon.BobStyle "InverseSmooth";
		Weapon.BobSpeed 1.6;
		Weapon.BobRangeX 0.6;
		Weapon.BobRangeY 0.8;
		Weapon.SelectionOrder 3100;
		Inventory.PickupMessage "$TXT_WEAPON_M4";
		Inventory.PickupSound "WeaponBuild";
		Tag "$TAG_MWEAPBLOODSCOURGE";
	}
	
	States {
	Select:
		TNT1 A 0 A_SetCrosshair(61);
		TNT1 A 0 SpawnWeaponLight('cBloodscourgeLight');
		MSTF A 1 A_Raise(SELECT_SPEED);
		Wait;
	Deselect:
		MSTF A 1 A_Lower(SELECT_SPEED);
		Wait;
	Ready:
		MSTF AAAAAABBBBBBCCCCCCDDDDDDEEEEEEFFFFF 1 A_WeaponReady();
		Loop;
	Fire:
		MSTF G 4 Offset(0, 38);
		MSTF H 4 Bright Offset(0, 42) BloodscourgeFire();
		MSTF H 2 Bright Offset(0, 40);
		MSTF I 4 Offset(0, 40);
		MSTF I 3 Offset(0, 39);
		MSTF J 3 Offset(0, 39);
		MSTF J 3 Offset(0, 38);
		MSTF J 3 Offset(0, 36);
		MSTF F 3 Offset(0, 34);
		MSTF F 4 Offset(0, 32);
		Goto Ready;
	}
	
	action void BloodscourgeFire() {
		A_FireProjectile("cBloodscourgeMissile");
		A_AlertMonsters(ALERT_DIST_NORM);
		A_SetBlend("72 14 11", 0.7, 20);
		A_PlaySound("MageStaffFire", CHAN_WEAPON);
	}
}

class cBloodscourgeMissile : Actor {
	const BLAST_DAMAGE = 180;
	const NOBLAST_DAMAGE = 200;
	const CLUSTERS = 3;
	
	Default {
		Radius 14;
		Height 12;
		Projectile;
		Speed 38;
		DamageType "Fire";
		+EXTREMEDEATH
		DeathSound "SorcererBigBallExplode";
		+FULLVOLDEATH
	}
	
	States {
	Spawn:
		MSP1 ABCD 4 Bright Light("Bloodscourge2");
		Loop;
	Death:
		TNT1 A 0 {
			A_SetScale(1.5);
			double z = GetZAt() - pos.z + 12;
			if (z > 0) AddZ(z, false);
		}
		MSP1 G 3 Bright Light("Bloodscourge2") {
			A_Explode(BLAST_DAMAGE, 160, XF_HURTSOURCE, false, 64);
		}
		TNT1 A 0 A_Quake(4, 20, 0, 340, "");
		MSP1 H 3 Bright Light("Bloodscourge1") SpawnClusters();
		MSP1 I 3 Bright Light("Bloodscourge1");
		MSP1 JKL 3 Bright Light("Bloodscourge2");
		MSP1 MNOP 4 Bright Light("Bloodscourge3");
		MSP1 P 4 Bright Light("Bloodscourge4");
		Stop;
	}
	
	void SpawnClusters() {
		double angleDelta = 360 / CLUSTERS;
		
		for (int i = 0; i < CLUSTERS; i++) {
			Actor mo = Spawn("cBloodscourgeCluster", pos + (0, 0, 6));
			if (mo) {
				double ang = angle + i*angleDelta + frandom[BloodscourgeCluster](-15,15);
				mo.angle = ang;
				mo.VelFromAngle(frandom[BloodscourgeCluster](2.2, 3.5), ang);
				mo.vel.z = frandom[BloodscourgeCluster](11.9, 14.5);
			}
		}
	}
	
	override int SpecialMissileHit(Actor victim) {
		int r = Super.SpecialMissileHit(victim);
		if (r == -1 && victim && victim.bNORADIUSDMG) {
			victim.DamageMobj(self, target, NOBLAST_DAMAGE, damageType);
		}
		return r;
	}
	
	override int DoSpecialDamage(Actor target, int damage, Name damageType) {
		if (target.player) {
			return Super.DoSpecialDamage(target, damage, damageType)/2;
		}
		return Super.DoSpecialDamage(target, damage, damageType);
	}
}

class cBloodscourgeCluster : Actor {
	const BLAST_DAMAGE = 125;
	
	Default {
		Radius 15;
		Height 12;
		Projectile;
		DamageType "Fire";
		DeathSound "MageStaffExplode"; 
		-NOGRAVITY
		+THRUACTORS
		+EXTREMEDEATH
		ReactionTime 30;
		+BOUNCEONWALLS
		+BOUNCEONCEILINGS
		WallBounceFactor 0.6;
	}
	
	States {
	Spawn:
		MSP2 ABCD 2 Bright Light("Bloodscourge3") A_CountDown();
		Loop;
	Death:
		TNT1 A 0 A_NoGravity();
		TNT1 A 0 {
			double z = GetZAt() - pos.z + 24;
			if (z > 0) AddZ(z, false);
		}
		MSP2 E 3 Bright Light("Bloodscourge3") A_Explode(BLAST_DAMAGE, 96, XF_HURTSOURCE, false, 16);
		MSP2 FG 4 Bright Light("Bloodscourge3");
		MSP2 HI 5 Bright Light("Bloodscourge4");
		Stop;
	}
	
	override void BeginPlay() {
		Super.BeginPlay();
		SetState(CurState + random(0,3));
	}
	
	override int DoSpecialDamage(Actor target, int damage, Name damageType) {
		if (target.player) {
			return Super.DoSpecialDamage(target, damage, damageType)/2;
		}
		
		return Super.DoSpecialDamage(target, damage, damageType);
	}
}

class cBloodscourgeLight : cPlayerLight {
	Default {
		Args 51, 0, 0, 32;
	}
	
	override void Tick() {
		Super.Tick();
		
		if(!master || !master.player || !master.player.ReadyWeapon ||
			master.player.ReadyWeapon.GetClass() != "cBloodscourge") {
			Destroy();
		}
	}
}

class cBloodscourgePiece1 : MWeaponPiece1 replaces MWeaponPiece1 {
	Default {
		WeaponPiece.Weapon "cBloodscourge";
		-FLOATBOB
		+INVENTORY.RESTRICTABSOLUTELY
	}
	
	States {
	Spawn:
		WMS1 A -1 Bright Light("BloodscourgePiece");
		Stop;
	}
}

class cBloodscourgePiece2 : MWeaponPiece2 replaces MWeaponPiece2 {
	Default {
		WeaponPiece.Weapon "cBloodscourge";
		-FLOATBOB
		+INVENTORY.RESTRICTABSOLUTELY
	}
	
	States {
	Spawn:
		WMS2 A -1 Bright Light("BloodscourgePiece");
		Stop;
	}
}

class cBloodscourgePiece3 : MWeaponPiece3 replaces MWeaponPiece3 {
	Default {
		WeaponPiece.Weapon "cBloodscourge";
		-FLOATBOB
		+INVENTORY.RESTRICTABSOLUTELY
	}
	
	States {
	Spawn:
		WMS3 A -1 Bright Light("BloodscourgePiece");
		Stop;
	}
}
