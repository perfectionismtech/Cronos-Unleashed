class cCrystalVial : CrystalVial replaces CrystalVial {
	Default {
		Radius 12;
		Height PICKUP_HEIGHT;
		+INVENTORY.NOSCREENFLASH
	}
	
	States {
	Spawn:
		PTN1 AAABCD 9 Light("CrystalVialItem") DoSpawnParticle();
		Loop;
	}
	
	void DoSpawnParticle() {
		A_SpawnParticle("0055FF", 0, 70, 2, 0, 
			frandom(-4,4), frandom(-4,4), 30, 
			frandom(-0.1,0.1), frandom(-0.1,0.1), 0, 
			0, 0, 0.015);
	}
	
	override bool TryPickup(in out Actor other) {
		bool pickup = Super.TryPickup(other);
		if (pickup) {
			if (CVar.GetCVar("cl_healing_flash", other.player).GetBool()) {
				other.A_SetBlend("0D78DB", 0.2, 20);
			} else {
				// Play the regular flash
				other.player.bonuscount = BONUSADD;
			}
		}
		return pickup;
	}
}

class cQuartzFlask : ArtiHealth replaces ArtiHealth {
	Default {
		Radius PICKUP_RADIUS;
		Height PICKUP_HEIGHT;
		Inventory.PickupFlash "";
		-INVENTORY.FANCYPICKUPSOUND
		-INVENTORY.INVBAR
		-COUNTITEM
		Inventory.PickupSound "misc/i_pkup";
	}
	
	States {
	Spawn:
		PTN2 A 9 Light("QuartzFlaskItem") DoSpawnParticle();
		Loop;
	}
	
	void DoSpawnParticle() {
		A_SpawnParticle("BE34E8", 0, 70, 3, 0, 
			frandom(-8, 8), frandom(-8, 8), 26, 
			frandom(-.1, .1), frandom(-.1, .1), 0, 
			0, 0, 0.01);
	}
	
	override bool Use(bool pickup) {
		if (owner.Health <= 0 || owner.Health >= PlayerPawn(owner).GetMaxHealth()) {
			return false;
		}
		if (owner.CheckInventory("cQuartzRegen", 1)) {
			return false;
		}
		
		owner.A_GiveInventory("cQuartzRegen");
		if (CVar.GetCVar("cl_healing_flash", owner.player).GetBool()) {
			owner.A_SetBlend("D266EC", 0.3, 20);
		}
		return true;
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		cFlare(Spawn("cFlarePink")).init(self, 27, 20, 0.1, true);
	}
}

class cQuartzRegen : Powerup {
	Default {
		Powerup.Duration 50;
	}
	
	override void DoEffect() {
		Super.DoEffect();
		if (owner != null && owner.health > 0 && (level.time & 1) == 0) {
			owner.GiveBody(1);
		}
		if (owner.Health >= PlayerPawn(owner).GetMaxHealth()) {
			Destroy();
		}
	}
}

class cMysticUrn : Inventory replaces ArtiSuperHealth {
	Default {
		Radius PICKUP_RADIUS;
		Height PICKUP_HEIGHT;
		+NOGRAVITY
		+FLOATBOB
		+COUNTITEM
		+INVENTORY.INVBAR;
		+INVENTORY.FANCYPICKUPSOUND;
		Inventory.DefMaxAmount;
		Inventory.Icon "ARTISPHL";
		Inventory.PickupFlash "PickupFlash";
		Inventory.PickupSound "misc/p_pkup";
		Inventory.PickupMessage "$TXT_ARTISUPERHEALTH";
		Tag "$TAG_ARTISUPERHEALTH";
	}
	
	States {
	Spawn:
		SPHL A -1;
		Stop;
	}
	
	override bool Use(bool pickup) {
		if (owner == null) return false;
		
		if (owner.health <= 100) {
			owner.GiveBody(100, 200);
			if (CVar.GetCVar("cl_healing_flash", owner.player).GetBool()) {
				owner.A_SetBlend("FFF39D", 0.5, 20);
			}
			return true;
		} else {
			return false;
		}
	}
}

class cDragonskinBracers : ArtiBoostArmor replaces ArtiBoostArmor {
	Default {
		Radius PICKUP_RADIUS;
		Height PICKUP_HEIGHT;
	}
	
	States {
	Spawn:
		BRAC ABCDEFGH 6 Bright Light("BracerItem");
		Loop;
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		cFlare(Spawn("cFlarePink")).init(self, 36, 25, 0.15, true);
	}
}

class cBootsOfSpeed : ArtiSpeedBoots replaces ArtiSpeedBoots {
	Default {
		Radius PICKUP_RADIUS;
		Height PICKUP_HEIGHT;
		Powerup.Type "cPowerSpeedBoots";
	}
	
	States {
	Spawn:
		SPED ABCDEFGH 3 Bright Light("BootItem");
		Loop;
	}
}

class cPowerSpeedBoots : PowerSpeed {
	Default {
		Powerup.Duration -65;
		Speed 1.6;
	}
}

class cWingsOfWrath : ArtiFly replaces ArtiFly {
	Default {
		Radius PICKUP_RADIUS;
		Height PICKUP_HEIGHT;
		Inventory.MaxAmount 0;
		+INVENTORY.AUTOACTIVATE
		-COUNTITEM
	}
}

class cMana1 : Mana1 replaces Mana1 {
	Default {
		Radius PICKUP_RADIUS;
		Height PICKUP_HEIGHT;
	}
	
	States {
	Spawn:
		MAN1 ABCDEFGHI 4 Bright Light("BlueMana");
		Loop;
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		cFlare(Spawn("cFlareBlue")).init(self, 32, 20, 0.15, true);
	}
}

class cMana2 : Mana2 replaces Mana2 {
	Default {
		Radius PICKUP_RADIUS;
		Height PICKUP_HEIGHT;
		+FORCEXYBILLBOARD
	}
	
	States {
	Spawn:
		MAN2 ABCDEFGHIJKLMNOP 4 Bright Light("GreenMana");
		Loop;
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		cFlare(Spawn("cFlareGreen")).init(self, 32, 20, 0.1, true);
	}
}

class cMana3 : Mana3 replaces Mana3 {
	Default {
		Radius PICKUP_RADIUS;
		Height PICKUP_HEIGHT;
		+FORCEXYBILLBOARD
	}
	
	States {
	Spawn:
		MAN3 ABCDEFGHIJKLMNOP 4 Bright Light("RedMana");
		Loop;
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		cFlare(Spawn("cFlareRed")).init(self, 32, 25, 0.2, true);
	}
}

class cMana4 : Inventory {
	Default {
		Radius PICKUP_RADIUS;
		Height PICKUP_HEIGHT;
		+FORCEXYBILLBOARD
		+COUNTITEM
		+FLOATBOB
		+INVENTORY.INVBAR
		Inventory.PickupFlash "PickupFlash";
		+INVENTORY.FANCYPICKUPSOUND
		Inventory.DefMaxAmount;
		Inventory.Icon "ARTIMAN4";
		Inventory.PickupSound "misc/p_pkup";
		Inventory.PickupMessage "Purple Mana";
		Tag "Purple Mana";
	}
	
	States {
	Spawn:
		MAN4 ABCDEFGHIJKLMNOP 4 Bright Light("PurpleMana");
		Loop;
	}
	
	override bool Use (bool pickup) {
		return false;
	}
}
