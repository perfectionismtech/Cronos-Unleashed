class cSapphireWand : MWeapWand {
	const V_SPREAD_FAC = 0.7;
	
	Default {
		Weapon.YAdjust 6;
		Weapon.BobStyle "InverseSmooth";
		Weapon.BobRangeX 0.6;
		Weapon.BobRangeY 0.8;
		Weapon.BobSpeed 1.6;
		+WEAPON.NOAUTOAIM
		+WEAPON.NOALERT
		+INVENTORY.RESTRICTABSOLUTELY
	}
	
	States {
	Spawn:
		WWND A -1;
		Stop;
	Select:
		TNT1 A 0 A_SetCrosshair(58);
		MWND A 1 A_Raise(15);
		Wait;
	Deselect:
		MWND A 1 A_Lower(15);
		Wait;
	Fire:
		MWND A 2;
		MWND B 6 Bright Offset(0, 40) WandAttack(3.4);
		MWND A 5 Offset(0, 38);
		MWND A 3 Offset(0, 36) A_ReFire();
		Goto Ready;
	}
	
	action void WandAttack(float spread) {
		if (player == null) return;
		
		FLineTraceData trace;
		LineTrace(angle, 800, pitch, 0, player.viewheight, data: trace);
		
		// Adjust pitch for camera height and attack height
		double attackHeight = height/2 + PlayerPawn(self).attackZOffset*(player.crouching<0 ? player.crouchfactor : 1);
		Vector3 attackPos = Vec3Offset(0, 0, attackHeight);
		Vector3 dir = (trace.HitLocation - attackPos).Unit();
		double pitchDelta = -asin(dir.z) - pitch;
		
		if (trace.hitActor && trace.hitActor.getClass() == "cFlechetteMine") {
			// Shooting a Flechette, perfect accuracy
			A_FireProjectile("cSapphireWandMissile", 0, true, 0, 0, 0, pitchDelta);
		} else {
			Vector2 spread = AngletoVector(random[SapphireWandSpread](0,360), frandom[SapphireWandSpread](0,spread));
			spread.y *= V_SPREAD_FAC;
			A_FireProjectile("cSapphireWandMissile", spread.x, pitch: pitchDelta + spread.y);
		}
		
		A_AlertMonsters(1500);
		A_PlaySound("MageWandFire", CHAN_WEAPON);
	}
}

class cSapphireWandMissile : FastProjectile {
	Default {
		Radius 6;
		Height 6;
		DamageFunction int( 11 * frandom[SapphireWandDamage](0.9,1.1) );
		Speed 110;
		MissileType "cSapphireWandSmoke";
		MissileHeight 8;
		Obituary "$OB_MPMWEAPWAND";
		Decal "RailScorchLower";
		+CANNOTPUSH
		+NODAMAGETHRUST
		+FORCEXYBILLBOARD
	}
	
	States {
	Spawn:
		TNT1 A 21;
		Stop;
	Death:
		MWND E 2 Bright Light("SapphireWand");
		MWND FG 3 Bright Light("SapphireWand");
		MWND HI 2 Bright Light("SapphireWand");
		Stop;
	}
	
	override void BeginPlay() {
		Super.BeginPlay();
		
		bBLOODSPLATTER = (random() < 128);
		bNOPAIN = (random() < 128);
	}
	
	override void Tick() {
		// Set the pitch so the trail can use it
		// Vel is 0 in (Post)BeginPlay, so can't be called there
		// Should be before Super.Tick() to set before trail is spawned
		if (pitch == 0) A_FaceMovementDirection();
		
		Super.Tick();
	}
}

class cSapphireWandSmoke : Actor {
	Default {
		VSpeed -0.45;
		RenderStyle "Translucent";
		Alpha 0.6;
		+NOINTERACTION
		+NOBLOCKMAP
		+NOTELEPORT
		+FORCEXYBILLBOARD
	}
	
	States {
	Spawn:
		MWND CDCDCDCD 6 A_FadeOut(0.1);
		Stop;
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		
		double oldVelZ = vel.z; // Keep the VSpeed property
		Vel3DFromAngle(1.3, angle+frandom(-9,9), pitch+frandom(-6,8));
		vel.z += oldVelZ;
		
		if (random() < 128) SetState(curState.nextState, true);
	}
}
