class cSapphireWand : cWeapon {
	Default {
		Inventory.RestrictedTo "cMagePlayer";
		Weapon.YAdjust 6;
		Weapon.BobStyle "InverseSmooth";
		Weapon.BobSpeed 1.6;
		Weapon.BobRangeX 0.6;
		Weapon.BobRangeY 0.8;
		Weapon.SelectionOrder 3600;
		Tag "$TAG_MWEAPWAND";
	}
	
	States {
	Spawn:
		WWND A -1;
		Stop;
	Select:
		TNT1 A 0 A_SetCrosshair(58);
		MWND A 1 A_Raise(SELECT_SPEED);
		Wait;
	Deselect:
		MWND A 1 A_Lower(SELECT_SPEED);
		Wait;
	Ready:
		MWND A 1 A_WeaponReady();
		Loop;
	Fire:
		MWND A 2;
		MWND B 6 Bright Offset(0, 40) WandAttack(3.4);
		MWND A 5 Offset(0, 38);
		MWND A 3 Offset(0, 36) A_ReFire();
		Goto Ready;
	AltFire:
		MWND A 2 A_JumpIf(!AltFireDepleteAmmo(), "Ready");
		MWND B 4 Bright Offset(0, 36) WandAttack(2.3);
		MWND A 2 Offset(0, 34);
		MWND B 4 Bright Offset(0, 39) WandAttack(3.6);
		MWND A 2 Offset(0, 37);
		MWND B 4 Bright Offset(0, 42) WandAttack(4.8);
		MWND A 3 Offset(0, 38);
		MWND A 3 Offset(0, 36);
		MWND A 3 Offset(0, 34);
		MWND A 7 Offset(0, 32);
		Goto Ready;
	}
	
	action void WandAttack(float spread) {
		if (player == null) return;
		
		FLineTraceData lt;
		LineTrace(angle, 800, pitch, 0, player.viewheight, data: lt);
		
		if (lt.hitActor && lt.hitActor.getClass() == 'cFlechetteMine') {
			// Shooting a Flechette, perfect accuracy
			FireAdjustedMissile("cSapphireWandMissile");
		} else {
			Vector2 spread = GetSpreadOval(spread, 0.7);
			FireAdjustedMissile("cSapphireWandMissile", spread.x, spread.y);
		}
		
		A_AlertMonsters(ALERT_DIST_NORM);
		A_PlaySound("MageWandFire", CHAN_WEAPON);
	}
	
	const ALTFIRE_COST = 1;
	
	action bool AltFireDepleteAmmo() {
		if (sv_infiniteammo || FindInventory("PowerInfiniteAmmo", true)) {
			return false;
		}
		
		Ammo manaBl = Ammo(FindInventory("Mana1"));
		Ammo manaGr = Ammo(FindInventory("Mana2"));
		
		if (manaBl && manaBl.amount >= ALTFIRE_COST) {
			// Check if the player has more green mana than blue
			if (manaGr && manaGr.amount > manaBl.amount) {
				manaGr.amount -= ALTFIRE_COST;
				return true;
			} else {
				manaBl.amount -= ALTFIRE_COST;
				return true;
			}
		} else {
			// No blue mana, try to deplete green mana
			if (manaGr && manaGr.amount >= ALTFIRE_COST) {
				manaGr.amount -= ALTFIRE_COST;
				return true;
			}
		}
		
		return false;
	}
}

class cSapphireWandMissile : FastProjectile {
	Default {
		Radius 6;
		Height 6;
		DamageFunction cWeapon.RandomizeDamage(13);
		Speed 110;
		MissileType "cSapphireWandSmoke";
		MissileHeight 8;
		Obituary "$OB_MPMWEAPWAND";
		Decal "RailScorchLower";
		+CANNOTPUSH
		+NODAMAGETHRUST
		+FORCEXYBILLBOARD
	}
	
	States {
	Spawn:
		TNT1 A 21;
		Stop;
	Death:
		MWND EFG 2 Bright Light("SapphireWandPuff1");
		MWND HI 2 Bright Light("SapphireWandPuff2");
		Stop;
	}
	
	override void BeginPlay() {
		Super.BeginPlay();
		
		bBLOODSPLATTER = (random() < 128);
		bPAINLESS = (random() < 128);
	}
	
	override void Tick() {
		// Set the pitch so the trail can use it
		// Vel is 0 in (Post)BeginPlay, so can't be called there
		// Should be before Super.Tick() to set before trail is spawned
		if (pitch == 0) A_FaceMovementDirection();
		
		Super.Tick();
	}
}

class cSapphireWandSmoke : Actor {
	Default {
		VSpeed -0.35;
		RenderStyle "Translucent";
		Alpha 0.6;
		+NOINTERACTION
		+NOBLOCKMAP
		+NOTELEPORT
		+FORCEXYBILLBOARD
	}
	
	States {
	Spawn:
		MWND CDCDCD 5 A_FadeOut(0.15);
		Stop;
	}
	
	override void PostBeginPlay() {
		Super.PostBeginPlay();
		
		double oldVelZ = vel.z; // Keep the VSpeed property
		Vel3DFromAngle(1.4, angle+frandom(-8,8), pitch+frandom(-4,5));
		vel.z += oldVelZ;
		
		if (random() < 128) SetState(curState.nextState, true);
	}
}
